<div id="notifications-container" class="notifications-container position-fixed top-0 end-0 p-3" style="z-index: 1050;">
  {{#if notifications}}
    {{#each notifications}}
      <div class="toast show notification-toast mb-2" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header {{#if this.type}}bg-{{this.type}} text-white{{/if}}">
          <strong class="me-auto">{{this.title}}</strong>
          <button type="button" class="btn-close {{#if this.type}}btn-close-white{{/if}}" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body">
          {{this.message}}
        </div>
      </div>
    {{/each}}
  {{/if}}
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    function showNotification(type, title, message, duration = 5000) {
      const container = document.getElementById('notifications-container');
      
      const toast = document.createElement('div');
      toast.className = 'toast show notification-toast mb-2';
      toast.setAttribute('role', 'alert');
      toast.setAttribute('aria-live', 'assertive');
      toast.setAttribute('aria-atomic', 'true');
      
      const header = document.createElement('div');
      let headerClass = 'toast-header';
      
      if (type === 'success') {
        headerClass += ' bg-success text-white';
      } else if (type === 'danger') {
        headerClass += ' bg-danger text-white';
      } else if (type === 'warning') {
        headerClass += ' bg-warning text-white';
      } else if (type === 'info') {
        headerClass += ' bg-info text-white';
      }
      
      header.className = headerClass;
      
      const titleElement = document.createElement('strong');
      titleElement.className = 'me-auto';
      titleElement.textContent = title;
      
      const closeButton = document.createElement('button');
      closeButton.className = 'btn-close' + (type ? ' btn-close-white' : '');
      closeButton.setAttribute('type', 'button');
      closeButton.setAttribute('data-bs-dismiss', 'toast');
      closeButton.setAttribute('aria-label', 'Close');
      
      const body = document.createElement('div');
      body.className = 'toast-body';
      body.textContent = message;
      
      header.appendChild(titleElement);
      header.appendChild(closeButton);
      toast.appendChild(header);
      toast.appendChild(body);
      container.appendChild(toast);
      
      closeButton.addEventListener('click', function() {
        container.removeChild(toast);
      });
      
      setTimeout(function() {
        if (toast.parentNode === container) {
          container.removeChild(toast);
        }
      }, duration);
    }
    
    document.body.addEventListener('htmx:afterOnLoad', function(event) {
      if (event.detail.xhr.status === 200) {
        if (event.detail.xhr.responseText.includes('notification-success')) {
          showNotification('success', 'Успех', event.detail.xhr.responseText, 3000);
        }
      } else {
        showNotification('danger', 'Ошибка', 'Произошла ошибка при выполнении операции', 5000);
      }
    });
  });
</script>

<style>
  .notifications-container {
    width: 350px;
    max-width: 100%;
  }
  
  .notification-toast {
    opacity: 1;
  }
</style>
